# See output: https://github.com/barsoom/ex-remit/actions
# Set up from these instructions: https://github.com/actions/setup-elixir

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  # Wait for previous run to complete, to avoid concurrent deployment.
  # https://github.community/t/how-to-limit-concurrent-workflow-runs/16844/17
  # https://github.com/softprops/turnstyle
  wait-for-completion:
    runs-on: ubuntu-latest
    timeout-minutes: 4
    steps:
      - name: Wait for any previous runs to finish
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tests:
    needs: wait-for-completion
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

    services:
      db:
        image: postgres:12
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: "remit_test"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: actions/setup-elixir@v1
      with:
        # NOTE: Keep in sync with elixir_buildpack.config and asdf's .tool-versions.
        elixir-version: "1.12.3"
        otp-version: "24.0.6"
        experimental-otp: true
    # Based on: https://github.com/actions/cache/blob/master/examples.md#elixir---mix
    # `restore-keys` lets us fall back to partially matching caches.
    - name: Restore cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-mix-
    - name: Install deps
      run: mix deps.get
    - name: Run tests
      run: mix test

  # Based on: https://mikecoutermarsh.com/github-actions-deploy-to-heroku/
  deploy:
    needs: tests
    runs-on: ubuntu-latest

    # Only if we're on master â€“ not with PRs.
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Deploy
        env:
          HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
          HEROKU_APP_NAME: "ex-remit"
        # Migrations are run by Heroku release phase: see Procfile.
        run: git push https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git origin/master:master
